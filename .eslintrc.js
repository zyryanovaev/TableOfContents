module.exports = {
    extends: [
        'airbnb-base',
        'next/core-web-vitals',
        'plugin:@typescript-eslint/recommended',
        'plugin:prettier/recommended',
        'plugin:react/recommended',
        'plugin:import/recommended',
        'prettier',
    ],

    plugins: ['@typescript-eslint', 'prettier', 'react-hooks', 'react', 'import'],

    parser: '@typescript-eslint/parser',

    parserOptions: {
        ecmaVersion: 2018,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
        warnOnUnsupportedTypeScriptVersion: true,
    },

    settings: {
        react: {version: 'detect'},
        'import/resolver': {
            typescript: {
                project: 'tsconfig.json',
            },
            node: {
                extensions: ['.js', '.jsx', '.ts', '.tsx', 'd.ts'],
            },
        },
        'import/extensions': ['.ts', '.tsx', '.d.ts'],
        'import/parsers': {'@typescript-eslint/parser': ['.ts', '.tsx', '.d.ts']},
    },

    rules: {
        camelcase: 'off',
        'func-style': 'off',
        'no-param-reassign': ['error', {props: false}],
        'arrow-parens': ['error', 'as-needed'],
        'no-plusplus': 'off',
        'no-restricted-syntax': ['error', 'LabeledStatement', 'WithStatement'],
        eqeqeq: ['error', 'smart'],
        'object-curly-spacing': ['error', 'never'],
        'no-underscore-dangle': 'off',
        'prefer-object-spread': 'off',
        'prefer-destructuring': 'off',
        'prefer-promise-reject-errors': 'off',
        'no-useless-catch': 'warn',
        'no-restricted-globals': 'warn',
        'no-restricted-exports': 'off',
        'no-shadow': 'off',
        'max-classes-per-file': 'warn',
        'padding-line-between-statements': [
            'error',
            {blankLine: 'always', prev: '*', next: 'return'},
            {blankLine: 'always', prev: ['const', 'let', 'var'], next: '*'},
            {blankLine: 'always', prev: ['block-like'], next: '*'},
            {blankLine: 'any', prev: ['const', 'let', 'var'], next: ['const', 'let', 'var']},
            {blankLine: 'always', prev: 'expression', next: 'if'},
        ],
        strict: ['error', 'safe'],
        'no-console': ['error', {allow: ['warn', 'error', 'debug']}],
        'quote-props': ['error', 'as-needed', {keywords: false, unnecessary: true, numbers: false}],
        'no-use-before-define': ['error', {functions: false, classes: false}],
        'func-names': 'off',
        'no-multi-assign': 'off',
        'vars-on-top': 'off',
        'id-match': ['error', '^[\x00-\x7F]+$'],
        'no-unused-vars': 'off',
        'no-useless-constructor': 'off',
        'comma-dangle': [
            'error',
            {
                arrays: 'always-multiline',
                objects: 'always-multiline',
                imports: 'always-multiline',
                exports: 'always-multiline',
                functions: 'never',
            },
        ],
        'class-methods-use-this': 'off',
        semi: 'error',
        'no-extra-semi': 'off',
        'import/no-self-import': 'off',
        'import/extensions': ['error', 'always', {js: 'never', jsx: 'never', ts: 'never', tsx: 'never'}],
        'import/no-cycle': 'warn',
        'import/no-dynamic-require': 'off',
        'import/no-extraneous-dependencies': 'off',
        'import/order': [
            'error',
            {
                groups: ['builtin', 'external', 'internal', ['parent', 'sibling'], 'index'],
                'newlines-between': 'always',
            },
        ],
        'import/newline-after-import': ['error', {count: 1}],
        'import/prefer-default-export': 'off',
        'import/no-restricted-paths': [
            'error',
            {
                zones: [
                    {target: './src/server/**/*', from: './src/client/**/*'},
                    {target: './src/server/**/*', from: './src/pages/**/*'},
                    {target: './src/client/**/*', from: './src/server/**/*'},
                    {target: './src/pages/**/*', from: './src/server/**/*'},
                ],
            },
        ],
        'import/no-import-module-exports': [
            'error',
            {
                exceptions: ['**/*/configs/**/*.ts'],
            },
        ],
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/no-inferrable-types': 'off',
        '@typescript-eslint/no-use-before-define': ['error'],
        '@typescript-eslint/ban-ts-comment': 'off',
        '@typescript-eslint/ban-types': 'off',
        '@typescript-eslint/no-shadow': 'warn',
        '@typescript-eslint/no-useless-constructor': 'error',
        '@typescript-eslint/indent': 'off',
        '@typescript-eslint/no-unused-vars': [
            'error',
            {vars: 'all', args: 'after-used', ignoreRestSiblings: true, argsIgnorePattern: '^_'},
        ],
        '@typescript-eslint/camelcase': 'off',
        'jsx-quotes': ['error', 'prefer-double'],
        'react/jsx-curly-brace-presence': ['error', {props: 'never', children: 'never'}],
        'react/jsx-closing-bracket-location': ['error'],
        'react/self-closing-comp': ['error'],
        'react/jsx-tag-spacing': ['error', {afterOpening: 'never', beforeSelfClosing: 'always', closingSlash: 'never'}],
        'react/jsx-uses-vars': ['error'],
        'react/jsx-uses-react': ['error'],
        'react-hooks/rules-of-hooks': 'error',
        'react-hooks/exhaustive-deps': 'warn',
        'react/prop-types': 'off',
        'react/display-name': 'off',
        'react/react-in-jsx-scope': 'off',
        'prettier/prettier': [
            'error',
            {
                singleQuote: true,
                bracketSpacing: false,
                trailingComma: 'es5',
                usePrettierrc: false,
                printWidth: 120,
                endOfLine: 'auto',
                semi: true,
                arrowParens: 'avoid',
                tabWidth: 4,
            },
        ],
    },
};
